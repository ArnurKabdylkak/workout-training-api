package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.63

import (
	"context"
	"log/slog"
)

func (r *mutationResolver) CreateWorkout(ctx context.Context, workout model.Workout) (bool, error) {
	log := r.logger.With("method", "PostWorkout")

	// request parse
	reqBody := request.NewCtrlCreateWorkoutRequest(string(workout))
	_, err := r.ctrl.NewWorkout(ctx, reqBody)
	if err != nil {
		log.ErrorContext(ctx, "fail", slog.Any("error", err))
		return false, err
	}

	log.InfoContext(
		ctx,
		"success",
	)
	return true, nil
}
